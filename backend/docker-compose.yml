# ===================================
# LA PÚBLICA - DOCKER COMPOSE STACK
# ===================================

version: '3.8'

services:
  # ===== BASE DE DATOS =====
  postgres:
    image: postgres:15-alpine
    container_name: lapublica-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-lapublica_db}
      POSTGRES_USER: ${DB_USER:-lapublica}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - lapublica-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-lapublica} -d ${DB_NAME:-lapublica_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===== REDIS CACHE =====
  redis:
    image: redis:7-alpine
    container_name: lapublica-redis
    restart: unless-stopped
    command: >
      --requirepass ${REDIS_PASSWORD:-}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - lapublica-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===== BACKEND API =====
  api:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: lapublica-api
    restart: unless-stopped
    ports:
      - "${PORT:-3001}:3001"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      DATABASE_URL: postgresql://${DB_USER:-lapublica}:${DB_PASSWORD:-password123}@postgres:5432/${DB_NAME:-lapublica_db}?schema=public
      REDIS_URL: redis://:${REDIS_PASSWORD:-}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      SEED_DATABASE: ${SEED_DATABASE:-false}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./backups:/app/backups
    networks:
      - lapublica-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===== WORKER DE BACKGROUND JOBS =====
  worker:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: lapublica-worker
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: postgresql://${DB_USER:-lapublica}:${DB_PASSWORD:-password123}@postgres:5432/${DB_NAME:-lapublica_db}?schema=public
      REDIS_URL: redis://:${REDIS_PASSWORD:-}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      WORKER_MODE: "true"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - lapublica-network
    command: ["node", "dist/worker.js"]

  # ===== NGINX REVERSE PROXY =====
  nginx:
    image: nginx:alpine
    container_name: lapublica-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
    networks:
      - lapublica-network

  # ===== PROMETHEUS MONITORING =====
  prometheus:
    image: prom/prometheus:latest
    container_name: lapublica-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - lapublica-network
    profiles:
      - monitoring

  # ===== GRAFANA DASHBOARD =====
  grafana:
    image: grafana/grafana:latest
    container_name: lapublica-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning:ro
    networks:
      - lapublica-network
    profiles:
      - monitoring

# ===== VOLÚMENES =====
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# ===== REDES =====
networks:
  lapublica-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16